{"version":3,"sources":["webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat.service.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/websocket.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/create-message.component.ts","webpack:///./src/app/typing.component.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".talk-bubble:not(.isOwn) {\\r\\n    margin-right: 20px;\\r\\n}\\r\\n\\r\\n.talk-bubble.isOwn {\\r\\n    background-color: lightblue;\\r\\n    text-align: right;\\r\\n    margin-left: 20px;\\r\\n}\\r\\n\\r\\n.talk-bubble {\\r\\n    position: relative;\\r\\n    width: 200px;\\r\\n    height: auto;\\r\\n    background-color: lightgreen;\\r\\n    margin: 10px 0px 25px 0px;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.tri-right.btm-left:after {\\r\\n    content: ' ';\\r\\n    position: absolute;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    left: 0px;\\r\\n    right: auto;\\r\\n    top: auto;\\r\\n    bottom: -20px;\\r\\n    border: 22px solid;\\r\\n    border-color: transparent transparent transparent lightgreen;\\r\\n}\\r\\n\\r\\n.tri-right.btm-right:after {\\r\\n    content: ' ';\\r\\n    position: absolute;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    left: auto;\\r\\n    right: 0px;\\r\\n    bottom: -20px;\\r\\n    border: 12px solid;\\r\\n    border-color: lightblue lightblue transparent transparent;\\r\\n}\\r\\n\\r\\n.talktext {\\r\\n    padding: 5px;\\r\\n    text-align: left;\\r\\n    line-height: 1.5em;\\r\\n}\\r\\n\\r\\n.talktext p {\\r\\n    /* remove webkit p margins */\\r\\n    -webkit-margin-before: 0em;\\r\\n    -webkit-margin-after: 0em;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/chat.component.css\n// module id = 141\n// module chunks = 1","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {WebSocketService} from './websocket.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/share';\n\nconst CHAT_URL = 'ws://localhost:3000/chat';\n\nexport interface Message {\n    author: string;\n    message: string;\n}\n\nexport interface UserTyping {\n    author: string;\n    isTyping: boolean;\n}\n\n@Injectable()\nexport class ChatService {\n    public messages: Subject<Message>;\n    public usersTyping: Subject<UserTyping>;\n    private hub;\n\n    constructor(wsService: WebSocketService) {\n        this.hub = wsService.connect(CHAT_URL).share();\n\n        this.messages = this.hub\n            .map((response: MessageEvent) => JSON.parse(response.data))\n            .filter((data: any) => {\n             return data.message != null;\n            })\n            .map((data: any): Message => {\n                return {\n                    author: data.author,\n                    message: data.message,\n                };\n            });\n\n        this.usersTyping = this.hub\n            .map((response: MessageEvent) => JSON.parse(response.data))\n            .filter((data: any) => {\n                return data.isTyping != null;\n            })\n            .map((data: any): UserTyping => {\n                return {\n                    author: data.author,\n                    isTyping: data.isTyping,\n                };\n            });\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat.service.ts","\r\nexport class UserService {\r\n    public static userId = Math.random().toString().substring(2);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.service.ts","import {Injectable} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\n@Injectable()\nexport class WebSocketService {\n    private subject: Subject<MessageEvent>;\n\n    public connect(url): Subject<MessageEvent> {\n        if(!this.subject) {\n            this.subject = this.create(url);\n        }\n\n        return this.subject;\n    }\n\n    private create(url): Subject<MessageEvent> {\n        const ws = new WebSocket(url);\n\n        const observable = Observable.create((obs: Observer<MessageEvent>) => {\n            ws.onmessage = obs.next.bind(obs);\n            ws.onerror = obs.error.bind(obs);\n            ws.onclose = obs.complete.bind(obs);\n\n            return ws.close.bind(ws);\n        });\n\n        const observer = {\n            next: (data: Object) => {\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify(data));\n                }\n            },\n        };\n\n        return Subject.create(observer, observable);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/websocket.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 74;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 74\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Component} from '@angular/core';\n\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <div class=\"wrapper\">\n            <chat></chat>\n            <typing></typing>\n            <create-message></create-message>\n        </div>\n    `\n})\n\nexport class AppComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport {ChatService} from './chat.service';\nimport {WebSocketService} from './websocket.service';\nimport {ChatComponent} from './chat/chat.component';\nimport {CreateMessage} from './create-message.component';\nimport {TypingComponent} from './typing.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    CreateMessage,\n    TypingComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [ChatService, WebSocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {ChatService, Message} from '../chat.service';\nimport {Component, ElementRef} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport { UserService } from \"app/user.service\";\n\n@Component({\n    selector: 'chat',\n    styleUrls: ['./chat.component.css'],\n    template: `\n        <div class=\"messages\">\n            <div *ngFor=\"let msg of messages;\"\n                 class=\"talk-bubble tri-right btm-right\"\n                 [ngClass]=\"{'btm-right isOwn': isOwnUser(msg), 'btm-left': !isOwnUser(msg)}\"\n                 title=\"user{{msg.author}}\">\n                <div class=\"talktext\">\n                    <p>{{ msg.message }}</p>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class ChatComponent {\n    public messages: Message[] = new Array();\n\n    constructor(private chatService: ChatService) {\n        chatService.messages.subscribe(msg => {\n            this.messages.push(msg);\n        });\n    }\n\n    public isOwnUser(message) {\n        return message.author === UserService.userId;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/chat.component.ts","import {ChatService} from './chat.service'\nimport {Component} from '@angular/core';\nimport { UserService } from \"app/user.service\";\n\n@Component({\n    selector: 'create-message',\n    template: `\n        <form #sendMsg=\"ngForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n            <div class=\"input-group col-xs-8\">\n                <input\n                    [(ngModel)]=\"message\"\n                    (input)=\"userIsTyping()\"\n                    (keypress.enter)=\"onSubmit()\"\n                    name=\"message\"\n                    ngControl=\"msg\"\n                    required\n                    type=\"text\"\n                    style=\"width: 226px;\"\n                    class=\"form-control\"\n                    autofocus\n                    placeholder=\"enter a message...\">\n            </div>\n        </form>\n    `\n})\n\nexport class CreateMessage {\n    private submitted = false;\n    private typing = false;\n    public message = '';\n\n    constructor(private chatService: ChatService) {}\n\n    private onSubmit() {\n        this.chatService.messages.next({\n            author: UserService.userId,\n            message: this.message\n        });\n\n        this.message = '';\n        this.userIsTyping();\n    }\n\n    private userIsTyping() {\n        const isTypingNow = this.message !== '';\n        if (this.typing !== isTypingNow) {\n            this.typing = isTypingNow;\n            this.chatService.usersTyping.next({\n                author: UserService.userId,\n                isTyping: this.typing\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/create-message.component.ts","import {ChatService, Message} from './chat.service';\nimport {Component, ElementRef} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport { UserService } from 'app/user.service';\n\n@Component({\n    selector: 'typing',\n    styles: [`\n        .typingBubble {\n            background-color: lightgreen;\n            margin: 0px 0px 20px 5px;\n            padding: 5px;\n            display: inline-block;\n        }\n        .typingBubble:nth-of-type(2){\n            background-color: lightpink;\n        }\n        .typingBubble:nth-of-type(3){\n            background-color: lightsteelblue;\n        }\n        p {\n            color: gray;\n            font-style: italic;\n            font-size: 0.75em;\n        } \n    `],\n    template: `\n        <div *ngIf=\"show.length <= 3\">\n            <div *ngFor=\"let msg of show;\" class=\"typingBubble\" title=\"user{{msg.author}} is typing\">...</div>\n        </div>\n        <div *ngIf=\"show.length > 3\">\n            <p>{{show.length}} users typing</p>\n        </div>\n    `,\n})\nexport class TypingComponent {\n    public show: string[] = [];\n    private typings = {};\n\n    constructor(private chatService: ChatService) {\n        chatService.usersTyping\n        .filter(typing => typing.author !== UserService.userId)\n        .subscribe(typer => {\n            if (typer.isTyping) {\n                this.typings[typer.author] = typer;\n            } else {\n                delete this.typings[typer.author];\n            }\n\n            this.show = Object.keys(this.typings).map((key) => this.typings[key]);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/typing.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}